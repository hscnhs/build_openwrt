name: Rust
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      build_modules:
        description: 'Build modules (separate multiple options with spaces)'
        required: false
        default: 'github.com/corazawaf/coraza-caddy/v2 github.com/caddy-dns/cloudflare github.com/caddy-dns/dynv6'
        type: string
    
env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Initialization environment
      run: |
        
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-xcaddy-archive-keyring.gpg
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-xcaddy.list
        sudo add-apt-repository ppa:longsleep/golang-backports
        sudo apt update
        sudo apt install golang-go xcaddy
    
    - name: Build
      id: compile
      run: | 
        
        xcaddy build --with github.com/corazawaf/coraza-caddy/v2 --with github.com/caddy-dns/cloudflare --with github.com/mholt/caddy-webdav --with github.com/greenpau/caddy-security --with github.com/aksdb/caddy-cgi/v2 --with github.com/Wafris/wafris-caddy
        
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
   
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: "file"
        path: ${{ env.FIRMWARE }}  
