name: Rust
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      build_modules:
        description: 'Build modules (separate multiple options with spaces)'
        required: false
        default: 'github.com/corazawaf/coraza-caddy/v2 github.com/caddy-dns/cloudflare github.com/caddy-dns/dynv6'
        type: string
    
env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Initialization environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install git
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-xcaddy-archive-keyring.gpg
        curl -1sLf 'https://dl.cloudsmith.io/public/caddy/xcaddy/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-xcaddy.list
        sudo add-apt-repository ppa:longsleep/golang-backports
        sudo apt update
        sudo apt install golang-go xcaddy
    
    - name: Build
      id: compile
      run: | 
        modules=`echo "${{ github.event.inputs.build_modules }}" | awk 'match($0,/(.*[^ ])( *)$/,a){gsub(/ /,"--with ",a); $0=a a} 1'`
        xcaddy build --with $modules
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
   
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      with:
        name: "file"
        path: ${{ env.FIRMWARE }}  

    - name: Upload firmware to release
      uses: softprops/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: "file"
